#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const ezs = require('ezs');
ezs.use(require('ezs-basics'));
ezs.use(require('..'));

const input = path.resolve(__dirname, './queries/input2.tsv');

fs.createReadStream(input)
  .pipe(ezs('CSVParse', { separator: '\t' }))
  .pipe(ezs('CSVObject'))
  .pipe(ezs('ISTEXQuery'))
  .pipe(ezs('ISTEXHarvest'))
  .pipe(ezs('ISTEXRequest'))
  .pipe(ezs('ISTEXHits'))
  .pipe(ezs('jsonify'))
  .pipe(process.stdout)
;

/*
CSVParse      > [["q",           "size","output"],
                 ["sparql","10","doi"]]
CSVObject     > [{"q":"sparql","size":"10","output":"doi"}]
ISTEXQuery    > [
                  {"q":"sparql","size":"10","output":"doi",
                   "ISTEX":{
                      "protocol":"https:",
                      "host":"api.istex.fr",
                      "pathname":"/document/",
                      "search":"q=sparql&size=10&output=doi"
                    }
                  }]
ISTEXHarvest  > [
                  {"q":"sparql","size":"10","output":"doi",
                  "ISTEX":{
                    "protocol":"https:",
                    "slashes":true,
                    "auth":null,
                    "host":"api.istex.fr",
                    "port":null,
                    "hostname":"api.istex.fr",
                    "hash":null,
                    "search":"q=sparql&size=100&output=doi&defaultOperator=OR&from=0",
                    "pathname":"/document/"
                    }},
                    ...
                ]
ISTEXRequest  > { total :x, hits: [...] }
ISTEXHits     > [
                  {
                    "q":"sparql",
                    "size":"10",
                    "output":"doi",
                    "ISTEX":{
                      "doi": ["10.1111/j.1467-9671.2008.01132.x"],
                      "id":"DBA63D1E60FCEBC7217C1B97161332DCEE8438D5",
                      "score":1.2004399
                    }
                  },
                  ...
                ]
*/
